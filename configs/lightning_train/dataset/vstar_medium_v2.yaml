# @package _global_

datamodule:
  train_generator:
    _target_: pcdd.datamodule.star.AsymmetricVariableArmlengthStarGraphGenerator
    count: 50000
    degree: 5
    min_pathlength: 6
    max_pathlength: 12
    min_plan_length: 5
    vocab_size: 56 # max_pathlength * degree - degree + 1
  val_generator:
    _target_: ${..train_generator._target_}
    count: 100
    degree: ${..train_generator.degree}
    min_pathlength: ${..train_generator.min_pathlength}
    max_pathlength: ${..train_generator.max_pathlength}
    min_plan_length: ${..train_generator.min_plan_length}
    vocab_size: ${..train_generator.vocab_size}
  test_generator:
    _target_: ${..train_generator._target_}
    count: 5000
    degree: ${..train_generator.degree}
    min_pathlength: ${..train_generator.min_pathlength}
    max_pathlength: ${..train_generator.max_pathlength}
    min_plan_length: ${..train_generator.min_plan_length}
    vocab_size: ${..train_generator.vocab_size}
  tokenizer:
    vocab_size: ${..train_generator.vocab_size}
  block_size: ${eval:1+2*${.train_generator.max_pathlength}*${.train_generator.degree}-2*${.train_generator.degree}+3+2*${.train_generator.max_pathlength}-2} # 2*(pl-1)*d + 3 + 2*(pl-1)

predictor:
  max_length: ${datamodule.block_size}
  max_steps: 200

  
tags:
  dataset: vstar_medium
  tokenizer: star_graph_tokenizer