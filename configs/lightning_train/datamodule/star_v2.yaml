_target_: ??? # set based on the model
manual_cache_dir: ${oc.env:DATA_DIR, data}
train_generator: ??? # set by dataset
val_generator: ??? # set by dataset
test_generator: ??? # set by dataset
tokenizer: 
  _target_: ??? # set based on the model
  vocab_size: ??? # set by dataset
train_dataloader_kwargs:
  batch_size:  64 # per device, depends on the device type
  num_workers: ${oc.decode:${oc.env:SLURM_CPUS_PER_TASK,4}} 
  shuffle: True
  pin_memory: True
  persistent_workers: True
val_dataloader_kwargs:
  batch_size: ${..train_dataloader_kwargs.batch_size} # same as training batch size to avoid recompilation
  num_workers: ${..train_dataloader_kwargs.num_workers}
  shuffle: False
  pin_memory: ${..train_dataloader_kwargs.pin_memory}
  persistent_workers: ${..train_dataloader_kwargs.persistent_workers}
test_dataloader_kwargs: 
  batch_size: ${..train_dataloader_kwargs.batch_size}
  num_workers: ${..train_dataloader_kwargs.num_workers}
  shuffle: False
  pin_memory: ${..train_dataloader_kwargs.pin_memory}
  persistent_workers: ${..train_dataloader_kwargs.persistent_workers}
predict_dataloader_kwargs:
  batch_size: ${..train_dataloader_kwargs.batch_size}
  num_workers: ${..train_dataloader_kwargs.num_workers}
  shuffle: False
  pin_memory: ${..train_dataloader_kwargs.pin_memory}
  persistent_workers: ${..train_dataloader_kwargs.persistent_workers}
noise_schedule: ${noise_schedule}
block_size: ??? # set by dataset
rewrite_manual_cache: false
global_batch_size: ${.train_dataloader_kwargs.batch_size}